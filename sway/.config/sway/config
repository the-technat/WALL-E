# config for sway of Technat (https://technat.ch)

############################
# General
############################
# super-key is modifier
set $mod Mod4

# sway-launcher-desktop is used as application launcher
set $menu exec $term --class=launcher -e /sbin/sway-launcher-desktop
for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 1

# terminal emulator
set $term alacritty

# laptop built-in display
set $laptop eDP-1

# swap arrow keys with home row keys like vim
set $left h
set $down j
set $up k
set $right l

# Clipman 
exec wl-paste -t text --watch clipman store
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"

# Wob
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# Shotman
for_window [title="shotman"] move posititon 30 30, floating enable

# udiskie
exec udiskie -Nt &

# swayidle && swaylock
# https://code.krister.ee/lock-screen-in-sway/
set $lock swaylock --clock --indicator --screenshots --effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 4x2 --datestr "%a %e.%m.%Y" --timestr "%k:%M"
set $lockman exec bash /sbin/lockman.sh
exec swayidle -w \
	timeout 300 $lock \
	timeout 270 'swaymsg "output * dpms off"' \
	resume 'swaymsg "output * dpms on"' \
  before-sleep $lock

############################
# Outputs
############################
# Dell monitor 21" (left)
output DP-1 pos 0 0 res 1920x1080

# Dell monitor 27" (right)
# output DP-2 pos 1920 0 res 2560x1440
output HDMI-A-1 pos 1920 0 res 2560x1440

# built-in display (clamshell mode)
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
# helps to preserve clamshell mode if sway is reloaded while using clamshell mode
exec_always /sbin/clamshell

# fix startup delay for GTK+ applications (https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start)
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

############################
# Inputs
############################
# define us layout aswell as us(intl) layout and switch using the following:
# swaymsg input type:keyboard xkb_switch_layout next
input "type:keyboard" {
    xkb_layout "us,us(intl)"
}

############################
# Apperance
############################
bar {
    swaybar_command waybar
}

# set font
font pango: FiraCode Regular 11

# set wallpaper
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# disable title bars
default_border none

############################
# Keybindings
############################

#
# Basics:
#
	# Start the application launcher
    bindsym $mod+space exec $menu

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start clipman
    bindsym Shift+Ctrl+h exec clipman pick -t wofi

		# Invoke shotman
		bindsym $mod+Shift+s exec shotman area

    # Start nnn
    # bindsym $mod+f exec nnn
    bindsym $mod+f exec thunar
    
    # Switch between keyboard layouts
    # bindsym Alt+Space input type:keyboard xkb_switch_layout next 
    # Not working: https://github.com/swaywm/sway/issues/6011
    # Workaround:
    bindsym Alt+Space exec swaymsg -t get_inputs -r \
      | jq '[.[] | select(.type == "keyboard") | .xkb_active_layout_index][0] - 1 | fabs' \
        | xargs swaymsg 'input type:keyboard xkb_switch_layout'

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # lock screen
    bindsym $mod+Shift+q exec $lockman
    
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Ctrl+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Multimedia:
#
    # Brightness control
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

    # Volume Control (using pamixer, using wob to display progress)
    bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $WOBSOCK
    bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $WOBSOCK
    bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK

    # Volume control (using pactl, no usage of wob)
    bindsym $mod+Alt+Ctrl+Space exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    # bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    # bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    # bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle    

    # Media player controls
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

#
# Moving around:
#

    # Tab throught the workspaces
    bindsym $mod+Tab workspace back_and_forth

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym Ctrl+Alt+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $right resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $left resize grow width 10px

    # Ditto, with arrow keys
    bindsym Right resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Left resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

############################
# sway-launcher-desktop autostart applications
############################
# Docs: https://github.com/Biont/sway-launcher-desktop
exec "$(sway-launcher-desktop autostart)"
